{"version":3,"file":"index.umd.js","sources":["../lib/bufferCutter.js"],"sourcesContent":["import stream from 'stream';\n\nexport function cutBuffer(buf, opts = {}) {\n  if (!(buf instanceof Buffer)) {\n    throw new Error(`${buf} is not Buffer`);\n  }\n\n  const deepCopy = 'deepCopy' in opts ? opts.deepCopy : true;\n  const start = 'start' in opts ? opts.start : 0;\n  const end = 'end' in opts ? opts.end : buf.length;\n  const length = buf.length < end ? buf.length - start : end - start;\n\n  if (deepCopy) {\n    const result = Buffer.alloc(length);\n    buf.copy(result, 0, start, start + length);\n    return result;\n  }\n\n  return buf.subarray(start, start + length);\n}\n\nexport function cuttingBuffer(buffer, opts = {}) {\n  if (!(buffer instanceof Buffer)) {\n    throw new Error(`${buffer} is not Buffer`);\n  }\n\n  const result = [];\n\n  const deepCopy = 'deepCopy' in opts ? opts.deepCopy : true;\n  const length = 'length' in opts ? opts.length : buffer.length;\n\n  for (let i = 0; i < buffer.length; ) {\n    result.push(cutBuffer(buffer, { deepCopy, start: i, end: (i += length) }));\n  }\n\n  return result;\n}\n\nexport async function* cuttingRStream(readable, opts = {}) {\n  if (!(readable instanceof stream.Readable)) {\n    throw new Error(`${readable} is not Readable Stream`);\n  }\n\n  const deepCopy = 'deepCopy' in opts ? opts.deepCopy : true;\n  const length = 'length' in opts ? opts.length : null;\n  if (length === null) {\n    throw new Error('no unit to cut');\n  }\n\n  let tmpBuffers = [];\n  let tmpTotalSize = 0;\n  // eslint-disable-next-line no-restricted-syntax\n  for await (const chunk of readable) {\n    tmpBuffers.push(chunk);\n    tmpTotalSize += chunk.length;\n\n    if (tmpTotalSize > length) {\n      const buffers = cuttingBuffer(Buffer.concat(tmpBuffers), {\n        deepCopy,\n        length,\n      });\n      const isRest = buffers.length % length !== 0;\n      const loopTimes = isRest ? buffers.length - 1 : buffers.length;\n      for (let i = 0; i < loopTimes; i += 1) {\n        yield buffers[i];\n      }\n\n      if (isRest) {\n        tmpBuffers = [buffers[buffers.length - 1]];\n        tmpTotalSize = tmpBuffers.reduce((sum, buf) => sum + buf.length, 0);\n      } else {\n        tmpBuffers = [];\n        tmpTotalSize = 0;\n      }\n    }\n  }\n  if (tmpBuffers.length > 0) yield* tmpBuffers;\n}\n"],"names":["cutBuffer","buf","opts","Buffer","Error","deepCopy","start","end","length","result","alloc","copy","subarray","cuttingBuffer","buffer","i","push","cuttingRStream","readable","stream","Readable","tmpBuffers","tmpTotalSize","chunk","buffers","concat","isRest","loopTimes","reduce","sum"],"mappings":"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"}